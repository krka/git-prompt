#!/usr/bin/python3
"""
Generate HTML documentation for git-prompt

This script creates a complete documentation page by embedding the examples snippet
generated by the test runner into the documentation template.
"""

import sys
from pathlib import Path


def generate_documentation(template_path, snippet_path, output_path):
    """Generate the complete documentation HTML from template and snippet

    Args:
        template_path: Path to the HTML template file
        snippet_path: Path to the examples snippet file
        output_path: Path to write the final documentation
    """
    # Read the template
    if not template_path.exists():
        raise FileNotFoundError(f"Template not found: {template_path}")

    with open(template_path, 'r') as f:
        template = f.read()

    # Read the examples snippet
    if not snippet_path.exists():
        raise FileNotFoundError(
            f"Examples snippet not found: {snippet_path}\n"
            f"Run the test suite first: cd tests && ./run_tests.py"
        )

    with open(snippet_path, 'r') as f:
        snippet_html = f.read()

    # Replace the placeholder with the examples snippet
    documentation = template.replace('<!-- $EXAMPLES -->', snippet_html)

    # Write the final documentation
    with open(output_path, 'w') as f:
        f.write(documentation)

    print(f"Documentation generated: {output_path}")


def main():
    """Main entry point"""
    script_dir = Path(__file__).parent
    template_path = script_dir / 'documentation-template.html'
    snippet_path = script_dir / 'examples-snippet.html'
    output_path = script_dir / 'documentation.html'

    try:
        # Generate the complete documentation from template and snippet
        generate_documentation(template_path, snippet_path, output_path)

        return 0
    except FileNotFoundError as e:
        print(f"Error: {e}", file=sys.stderr)
        return 1


if __name__ == '__main__':
    sys.exit(main())
